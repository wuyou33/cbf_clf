<launch>
    <!-- Launch CBF_CLF -->
    <arg name="mode"        default="trajectory" /> <!-- trajectory, ... (CURRENTLY NOT USED!) -->
    <arg name="trajectory"  default="const_height" /> <!-- const_height, circle, ... -->
    
    <group ns="cbfclf">
        <node name="controller" pkg="cbf_clf" type="controller" output="screen">
            <param name="trajectory"    value="$(arg trajectory)" />
        </node>
        <node name="input_message_handler" pkg="cbf_clf" type="input_message_handler" output="screen"/>
        <node name="output_message_handler" pkg="cbf_clf" type="output_message_handler" output="screen"/>
    </group>


    <!-- Launch  ZED Wrapper-->
    <arg name="svo_file"        default="" /> <!-- <arg name="svo_file" default="path/to/svo/file.svo"> -->

    <arg name="camera_model"    default="1" /> <!-- 0=ZED, 1=ZEDM-->
    <arg name="serial_number"   default="0" />
    <arg name="verbose"         default="true" />
    <arg name="resolution"      default="3" /> <!--0=RESOLUTION_HD2K, 1=RESOLUTION_HD1080, 2=RESOLUTION_HD720, 3=RESOLUTION_VGA -->
    <arg name="frame_rate"      default="60" />
    <!-- RESOLUTION_HD2K   -> 2208*1242, available framerates: 15 fps.
         RESOLUTION_HD1080 -> 1920*1080, available framerates: 15, 30 fps.
         RESOLUTION_HD720  -> 1280*720,  available framerates: 15, 30, 60 fps.
         RESOLUTION_VGA    -> 672*376,   available framerates: 15, 30, 60, 100 fps. -->

    <!-- Coordinate frame -->
    <arg name="pose_frame"      default="map" />
    <arg name="odometry_frame"  default="odom" />

    <group ns="zed">
        <include file="$(find zed_wrapper)/launch/zed_camera.launch">
            <arg name="svo_file"        value="$(arg svo_file)" />
            <arg name="pose_frame"      value="$(arg pose_frame)" />
            <arg name="odometry_frame"  value="$(arg odometry_frame)" />
            <arg name="camera_model"    value="$(arg camera_model)" />
            <arg name="serial_number"   value="$(arg serial_number)" />
            <arg name="resolution"      value="$(arg resolution)" />
            <arg name="frame_rate"      value="$(arg frame_rate)" />
            <arg name="verbose"         value="$(arg verbose)" />
        </include>
    </group>

    <!-- Launch MAVROS -->
    <arg name="fcu_url"         default="/dev/ttyTHS2:57600"/>
    <arg name="gcs_url"         default="" />
    <arg name="tgt_system"      default="1" />
    <arg name="tgt_component"   default="1" />
    <arg name="log_output"      default="screen" />
    <arg name="fcu_protocol"    default="v2.0" />
    <arg name="respawn_mavros"  default="false" />
    
    <node name="mavros" pkg="mavros" type="mavros_node" required="$(eval not respawn_mavros)" clear_params="true" output="$(arg log_output)" respawn="$(arg respawn_mavros)">
        <param name="pluginlists_yaml"  value="$(find mavros)/launch/px4_pluginlists.yaml" />
        <param name="config_yaml"       value="$(find mavros)/launch/px4_config.yaml" />
        <!-- rosparam command="load" file="$(find mavros)/launch/px4_blacklist.yaml" -->

        <!-- General stuff -->
        <param name="fcu_url"           value="$(arg fcu_url)" />
        <param name="gcs_url"           value="$(arg gcs_url)" />
        <param name="tgt_system"        value="$(arg tgt_system)" />
        <param name="tgt_component"     value="$(arg tgt_component)" />
        <param name="log_output"        value="$(arg log_output)" />
        <param name="fcu_protocol"      value="$(arg fcu_protocol)" />
        <param name="respawn_mavros"    value="$(arg respawn_mavros)" />
    
        <!-- enable heartbeat send and reduce timeout -->
        <!-- <param name="conn_heartbeat" value="5.0" /> -->
        <!-- <param name="conn_timeout" value="20.0" /> -->
    </node>

    <!-- Launch ROSBAG -->
    <!-- <arg name="record"  default="true" /> -->
    <!-- <node pkg="rosbag" type="record" name="rosbag_record" args="record -o /rosout" if="$(arg record)" /> -->
</launch>